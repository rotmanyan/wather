{"version":3,"sources":["data/weather/actions.js","data/weather/weatherReducer.js","data/store.js","data/weather/selector.js","pages/Dashboard.jsx","data/weather/operations.js","data/baseUrl.js","pages/Details.jsx","App.js","index.js"],"names":["actionTypes","firstState","secondState","weatherReducer","combineReducers","select_cities","state","arguments","length","undefined","_ref","type","payload","concat","Object","toConsumableArray","city","name","items","_ref2","list","selected","_ref3","loggerMiddleware","createLogger","duration","collapsed","colors","title","prevState","action","nextState","error","devtools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnchancers","compose","store","createStore","applyMiddleware","thunkMiddleware","Dashboard","input","sendRequest","e","getWatch","_this","props","preventDefault","selector","selectCity","target","setInput","setState","value","_this2","this","_this$props","react_default","a","createElement","onSubmit","onChange","onClick","className","map","el","id","key","react_router_dom","to","item","index","dt","main","temp","humidity","pressure","Component","MDTP","credentials","dispatch","option","baseUrl","axios","get","then","data","getWeatherSuccess","catch","getWeatherError","connect","Details","findSelected","find","element","toLowerCase","_this$props2","App","react_router","exact","path","component","require","config","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.eb810801.chunk.js","sourcesContent":["export const actionTypes = {\n    GET_WEATHER_REQUEST: 'GET_WEATHER_REQUEST',\n    GET_WEATHER_SUCCESS: 'GET_WEATHER_SUCCESS',\n    GET_WEATHER_ERROR: 'GET_WEATHER_ERROR',\n    SELECT_CITY: 'SELECT_CITY',\n}\n\nexport const getWeatherRequest = () => ({\n    type: actionTypes.GET_WEATHER_REQUEST\n})\n\nexport const getWeatherSuccess = data => ({\n    type: actionTypes.GET_WEATHER_SUCCESS,\n    payload: data\n})\n\nexport const getWeatherError = error => ({\n    type: actionTypes.GET_WEATHER_ERROR,\n    payload: {\n        error\n    }\n})\n\nexport const selectCity = data => ({\n    type: actionTypes.SELECT_CITY,\n    payload: data\n})","import {actionTypes} from './actions'\nimport {combineReducers} from 'redux'\n\nconst firstState = []\n\nconst firstReducer = (state = firstState, {type, payload}) => {\n    switch (type) {\n        case actionTypes.GET_WEATHER_SUCCESS:\n            return [...state, payload.city.name]\n        case actionTypes.GET_WEATHER_ERROR:\n            return [...state]\n        default:\n            return [...state]\n    }\n}\n\nconst secondState = []\n\nconst secondReducer = (state = secondState, {type, payload}) => {\n    switch (type) {\n        case actionTypes.GET_WEATHER_SUCCESS:\n            return [...state, payload.list]\n        case actionTypes.GET_WEATHER_ERROR:\n            return [...state]\n        default:\n            return [...state]\n    }\n}\n\nconst selectState = ''\n\nconst selectReducer = (state = selectState, {type, payload}) => {\n    switch (type) {\n        case actionTypes.SELECT_CITY:\n            return payload\n        default:\n            return state\n    }\n}\n\nexport const weatherReducer = combineReducers({\n    select_cities: firstReducer,\n    items: secondReducer,\n    selected: selectReducer\n})\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport {weatherReducer} from \"./weather/weatherReducer\";\n\nconst loggerMiddleware = createLogger({\n    duration: true,\n    collapsed: true,\n    colors: {\n        title: () => \"#139BFE\",\n        prevState: () => \"#1c5faf\",\n        action: () => \"#149945\",\n        nextState: () => \"#A47104\",\n        error: () => \"#ff0005\"\n    }\n});\n\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnchancers = devtools ? devtools : compose;\n\nconst store = createStore(\n    weatherReducer,\n    composeEnchancers(applyMiddleware(thunkMiddleware, loggerMiddleware))\n);\n\nexport default store;\n","export const items = state => state.items\nexport const select_cities = state => state.select_cities\nexport const selected = state => state.selected","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {getWeather} from \"../data/weather/operations\";\nimport {selectCity} from \"../data/weather/actions\";\nimport {Link} from \"react-router-dom\";\nimport * as selector from \"../data/weather/selector\";\n\nclass Dashboard extends Component {\n    state = {\n        input: ''\n    }\n    sendRequest = e => {\n        const {getWatch} = this.props\n        const {input} = this.state\n\n        e.preventDefault()\n        getWatch(input)\n\n    }\n\n    selector = e => {\n        this.props.selectCity(e.target.title)\n    }\n\n    setInput = e => this.setState({input: e.target.value})\n\n    render() {\n        const {getWatch, items, select_cities} = this.props\n        const {input} = this.state\n\n        return (\n            <div>\n                Dashboard\n                <br/>\n                <hr/>\n                <form onSubmit={this.sendRequest}>\n                    <input value={input} onChange={this.setInput} type=\"text\"/>\n                    <input type=\"submit\" value='watch'/>\n                </form>\n                <br/>\n                <input type='submit' value='kherson' onClick={e => getWatch(e.target.value)}/>\n                <input type='submit' value='odessa' onClick={e => getWatch(e.target.value)}/>\n                <input type='submit' value='kyiv' onClick={e => getWatch(e.target.value)}/>\n                <input type='submit' value='donetsk' onClick={e => getWatch(e.target.value)}/>\n                <input type='submit' value='lutsk' onClick={e => getWatch(e.target.value)}/>\n                <input type='submit' value='cherkasy' onClick={e => getWatch(e.target.value)}/>\n                <input type='submit' value='uman' onClick={e => getWatch(e.target.value)}/>\n                <input type='submit' value='kharkiv' onClick={e => getWatch(e.target.value)}/>\n                <hr/>\n                <div className='flex'>\n                    {select_cities.map(\n                        (el, id) => {\n                            return (\n                                <div key={id}>\n                                    <p>City:\n                                        <Link to='/details' title={el} onClick={this.selector}>{el}</Link>\n                                    </p>\n                                    <div>{items[id].map((item, index) => {\n                                        return (index < 1 &&\n                                            <div key={item.dt}>\n                                                <p>Temp: {item.main.temp}</p>\n                                                <p>Humidity: {item.main.humidity}</p>\n                                                <p>Pressure: {item.main.pressure}</p>\n                                            </div>\n                                        )\n                                    })}</div>\n                                </div>\n                            )\n                        }\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst MSTP = state => ({\n    items: selector.items(state),\n    select_cities: selector.select_cities(state)\n})\n\nconst MDTP = {\n    getWatch: getWeather,\n    selectCity\n}\n\nexport default connect(MSTP, MDTP)(Dashboard)\n","import axios from 'axios'\n\nimport {\n    getWeatherRequest,\n    getWeatherSuccess,\n    getWeatherError\n} from './actions'\n\nimport {urlForecast, urlToken} from '../baseUrl'\n\nexport const getWeather = credentials => dispatch => {\n    dispatch(getWeatherRequest())\n\n    const option = `${urlForecast}${credentials},${urlToken}`\n\n    axios.get(option)\n        .then(({data}) => {\n                return dispatch(getWeatherSuccess(data))\n            }\n        )\n        .catch(error => {\n\n            return dispatch(getWeatherError(error))\n        })\n}","export const baseUrl = process.env.REACT_APP_SERVER_ORIGIN\nexport const token = '31e4d2484c6fb6e04692fd6e1dc50a49'\nexport const urlToken = '/ua&APPID=' + token\n\nexport const urlForecast = baseUrl + '/data/2.5/forecast?q='\n","import React, {Component} from 'react';\nimport * as selector from '../data/weather/selector'\nimport './details.css'\nimport {connect} from \"react-redux\";\nimport {NavLink} from \"react-router-dom\";\n\nclass Details extends Component {\n    state = {\n        selector: null\n    }\n\n    componentDidMount() {\n        this.findSelected()\n    }\n\n    componentWillUnmount() {\n        this.setState({selector: null})\n    }\n\n    findSelected = () => {\n        const {select_cities, selected} = this.props\n\n        select_cities.find((element, index) => element.toLowerCase() === selected.toLowerCase() && this.setState({selector: index}))\n    }\n\n    render() {\n        const {items, select_cities} = this.props\n        const {selector} = this.state\n        return (\n            <div>\n                Details\n                <div className='flex'>\n                    {select_cities.map(\n                        (el, id) => {\n                            return (id === selector &&\n                                <div key={id}>\n                                    <p>City:{el}</p>\n                                    <div>\n                                        <div>Temp:{items[id].map((item, index) => index < 5 &&\n                                            <p key={item.dt}>{item.main.temp}</p>)}</div>\n                                        <div>Humidity:{items[id].map((item, index) => index < 5 &&\n                                            <p key={item.dt}>{item.main.humidity}</p>)}</div>\n                                        <div>Pressure:{items[id].map((item, index) => index < 5 &&\n                                            <p key={item.dt}>{item.main.pressure}</p>)}</div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    )}\n                </div>\n                <p>\n                    <button>\n                        <NavLink to='/'>Dashboard</NavLink>\n                    </button>\n                </p>\n            </div>\n        );\n    }\n}\n\nconst MSTP = state => ({\n    items: selector.items(state),\n    select_cities: selector.select_cities(state),\n    selected: selector.selected(state),\n})\n\nexport default connect(MSTP)(Details)\n","import React, {Component} from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport Dashboard from \"./pages/Dashboard\";\nimport Details from \"./pages/Details\";\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={Dashboard}/>\n                <Route path=\"/details\" component={Details}/>\n                <Redirect to=\"/\"/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport store from './data/store'\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nrequire('dotenv').config({path: '../.env'})\n\nrender(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));"],"sourceRoot":""}